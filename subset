class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        ans.add(curr);
        int n=nums.length;

        for(int i=1;i<=n;i++) {
            helper(nums,i,0,curr,ans);
        }
        return ans;
    }

    static void helper(int arr[], int k, int idx, List<Integer> curr, List<List<Integer>> ans){
        if(idx>=arr.length) return;
        if(k==1){
            for(int i=idx; i<arr.length;i++){
                curr.add(arr[i]);
                List<Integer> temp = new ArrayList<>();
                for(var x: curr){
                    temp.add(x);
                }
                ans.add(temp);
                curr.remove(curr.size()-1);
            }
            return;
        }
        for(int i=idx;i<arr.length;i++){
            curr.add(arr[i]);
            helper(arr,k-1,i+1,curr,ans);
            curr.remove(curr.size()-1);
        }
    }

}
