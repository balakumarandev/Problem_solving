class Solution {
    public int orangesRotting(int[][] grid) {
        Queue<int[]> q = new ArrayDeque<>();
        int fresh = 0;
        int time = 0;
        for(int r=0;r<grid.length;r++){
            for(int c=0;c<grid[0].length;c++){
                if(grid[r][c]==1){
                    fresh++;
                }
                if(grid[r][c]==2){
                    q.offer(new int[]{r,c});
                }
            }
        }
        int[][] dir = {{0,1},{0,-1},{1,0},{-1,0}};
        while(fresh > 0 && !q.isEmpty()){
            int len = q.size();
            for(int k=0;k<len;k++){
                int[] cur = q.poll();
                int r = cur[0];
                int c = cur[1];
                for(int[] d:dir){
                    int row = r+d[0];
                    int col = c+d[1];
                    if( row>=0 && row< grid.length && col>=0 && col< grid[0].length && grid[row][col] == 1 ){
                        grid[row][col] = 2;
                        fresh--;
                        q.offer(new int[]{row,col});
                    }

                }
            }
            time++;
        }
        if(fresh == 0) {return time;}
        else{ return -1;}

        }
    
}
