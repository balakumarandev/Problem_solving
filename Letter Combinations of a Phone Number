class Solution {
   
    public List<String> letterCombinations(String digits) {
        if(digits.length() == 0) return new LinkedList<>();
        Map<String,String> map=new HashMap<>();
        map.put("0","0");
        map.put("1","1");
        map.put("2", "abc");
        map.put("3", "def");
        map.put("4", "ghi");
        map.put("5", "jkl");
        map.put("6", "mno");
        map.put("7", "pqrs");
        map.put("8", "tuv");
        map.put("9", "wxyz");

        Queue<String> q = new LinkedList<>();
        for(int i=0;i<digits.length();i++){
            q.offer(String.valueOf(digits.charAt(i)));
        }
        List<String> res = new ArrayList<>();
        res.add("");
        while(!q.isEmpty()){
            String s = q.poll();
            String chars = map.get(s);
            List<String> temp = new ArrayList<>();
            for(int i=0;i<res.size();i++){
                for (int j=0;j<chars.length();j++){
                    temp.add(res.get(i) + chars.charAt(j));
                }
            }
            res = temp;
        }
        return res;
    }
}
